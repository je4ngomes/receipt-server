type Query {
    me: User!
}

type Mutation {
    updateUser(data: updateUserInput): User!
    signUp(data: signUpUserInput): AuthPayload!
    signIn(data: signInUserInput): AuthPayload!
}

type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    company: String
    receipts: [Receipt!]!
}

type AuthPayload {
    user: User!
    token: String!
}

input updateUserInput {
    name: String,
    username: String,
    email: String,
    company: String,
    password: String
}

input signUpUserInput {
    name: String!,
    username: String!,
    email: String!,
    company: String!,
    password: String!
}

input signInUserInput {
    username: String!
    password: String!
}